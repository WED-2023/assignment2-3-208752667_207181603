---
openapi: 3.0.3
info:
  title: Recipe API
  description: This is a simple API for managing and searching recipes.
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/ELBAZIS/WED-2023_assignment2-2-208752667_207181603/1.0.0
  description: SwaggerHub API Auto Mocking
security:
- bearerAuth: []
tags:
- name: Recipe Info
  description: Operations related to recipe information management
- name: Search Recipes
  description: Operations to search for recipes based on various criteria
- name: Random Recipes
  description: Operations to get random recipes
- name: User
  description: Operations related to user management (future)
paths:
  /users/recipes/create:
    post:
      tags:
      - Recipe Info
      summary: Create a new recipe
      description: Submit a new recipe to be added to the collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeFullInfoCreate'
        required: true
      responses:
        "201":
          description: Recipe created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_message_success'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security:
      - bearerAuth: []
  /recipes/{recipeId}:
    get:
      tags:
      - Recipe Info
      summary: Get a recipe by ID
      description: Retrieve the details of a recipe by its ID
      parameters:
      - name: recipeId
        in: path
        description: The ID of the recipe
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: A single recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_recipe_success'
        "400":
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /recipes/search:
    get:
      tags:
      - Search Recipes
      summary: Search recipes based on criteria
      description: Retrieve recipes that match specified criteria
      parameters:
      - name: recipeName
        in: query
        description: Keywords to search for in recipe titles and descriptions
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: number
        in: query
        description: Maximum number of recipes to return
        required: true
        style: form
        explode: true
        schema:
          maximum: 20
          minimum: 1
          type: integer
      - name: diet
        in: query
        description: Dietary preferences
        required: true
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: cuisine
        in: query
        description: Cuisine types
        required: true
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: intolerance
        in: query
        description: Intolerances to exclude from recipes
        required: true
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: string
      responses:
        "200":
          description: A list of recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_recipes'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /recipes/random/{number}:
    get:
      tags:
      - Random Recipes
      summary: Get an array of random recipes
      description: Retrieve an array of random recipes
      parameters:
      - name: number
        in: path
        description: Number of random recipes to retrieve
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: A list of recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_recipes'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /Register:
    post:
      tags:
      - User
      summary: Register a new user
      description: Register a new user by providing user details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_message_success'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Username taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409_message_success'
  /Login:
    post:
      tags:
      - User
      summary: User signing in
      description: Sign in a user by providing username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "200":
          description: User signed in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_message_success'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /Logout:
    post:
      tags:
      - User
      summary: User logging out
      description: Loging out the current user
      responses:
        "200":
          description: User signed in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_message_success'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /users/favorites/all:
    get:
      tags:
      - User
      summary: Get all favorite recipes for a user
      description: Retrieve a list of all favorite recipes for the logged-in user
      responses:
        "200":
          description: A list of favorite recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_recipes'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security:
      - bearerAuth: []
  /users/favorites/{id}:
    get:
      tags:
      - User
      summary: Get if a recipe is a favorite for a user
      description: Retrieve a boolean if a recipe is a favorite for a logged-in user
      parameters:
      - name: id
        in: path
        description: id of a recipe
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: boolean if a recipe is a favorite
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_inFavorites'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security:
      - bearerAuth: []
  /users/favorites:
    post:
      tags:
      - User
      summary: Add/remove a recipe in favorites
      description: Add a specific recipe to the logged-in user's list of favorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_favorites_body'
        required: true
      responses:
        "200":
          description: Recipe added to favorites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_message_success'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security:
      - bearerAuth: []
  /users/recipes:
    get:
      tags:
      - User
      summary: Get all recipes created by the user
      description: Retrieve a list of all recipes created by the logged-in user
      responses:
        "200":
          description: A list of recipes created by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_recipes'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security:
      - bearerAuth: []
  /users/family:
    get:
      tags:
      - User
      summary: Get all the family recipes created by the user
      description: Retrieve a list of all family recipes created by the logged-in user
      responses:
        "200":
          description: A list of family recipes created by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_recipes'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security:
      - bearerAuth: []
components:
  schemas:
    RecipeFullInfo:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
        title:
          type: string
        readyInMinutes:
          type: integer
        aggregateLikes:
          type: integer
        vegetarian:
          type: boolean
        vegan:
          type: boolean
        glutenFree:
          type: boolean
        familyRecipe:
          type: boolean
        summary:
          type: string
        extendedIngredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeFullInfo_ingredients'
        analyzedInstructions:
          type: array
          items:
            type: string
        servings:
          type: integer
    RecipeFullInfoCreate:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
        title:
          type: string
        readyInMinutes:
          type: integer
        vegetarian:
          type: boolean
        vegan:
          type: boolean
        glutenFree:
          type: boolean
        familyRecipe:
          type: boolean
        summary:
          type: string
        extendedIngredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeFullInfo_ingredients'
        analyzedInstructions:
          type: array
          items:
            type: string
        servings:
          type: integer
    RecipePreview:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
        title:
          type: string
        readyInMinutes:
          type: integer
        servings:
          type: integer
        aggregateLikes:
          type: integer
        vegan:
          type: boolean
        vegetarian:
          type: boolean
        glutenFree:
          type: boolean
        summary:
          type: string
        extendedIngredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeFullInfo_ingredients'
        analyzedInstructions:
          type: array
          items:
            type: string
    UserRegistration:
      required:
      - confirmPassword
      - email
      - password
      - username
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        country:
          type: string
        password:
          type: string
          format: password
        email:
          type: string
          format: email
    UserLogin:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    inline_response_200_recipes:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/RecipePreview'
    inline_response_200_recipe_success:
      type: object
      properties:
        recipe:
          $ref: '#/components/schemas/RecipeFullInfo'
        success:
          type: boolean
    inline_response_200_message_success:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
    inline_response_200_inFavorites:
      type: object
      properties:
        inFavorite:
          type: boolean
    inline_response_201_message_success:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
    inline_response_400:
      type: object
      properties:
        message:
          type: string
    inline_response_401:
      type: object
      properties:
        message:
          type: string
    inline_response_409_message_success:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
    id_favorites_body:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the recipe to add/remove to favorites
    RecipeFullInfo_ingredients:
      type: object
      properties:
        quantity:
          type: number
        unit:
          type: string
        name:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
